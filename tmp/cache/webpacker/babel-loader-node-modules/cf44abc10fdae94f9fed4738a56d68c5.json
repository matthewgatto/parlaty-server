{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jake\\\\Documents\\\\Repositories\\\\parlaty\\\\app\\\\javascript\\\\src\\\\components\\\\Select\\\\index.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport Text from '../Text';\nimport styles from './index.module.css';\n\nvar Select = function Select(_ref) {\n  var label = _ref.label,\n      color = _ref.color,\n      error = _ref.error,\n      options = _ref.options,\n      props = _objectWithoutProperties(_ref, [\"label\", \"color\", \"error\", \"options\"]);\n\n  return React.createElement(\"div\", {\n    className: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, label && React.createElement(Text, {\n    className: styles.label,\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, label, \" \", error && React.createElement(\"span\", {\n    className: styles.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"This field is required\")), React.createElement(\"input\", Object.assign({\n    className: styles.input\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  })), React.createElement(\"select\", Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), options.map(function (option) {\n    return React.createElement(\"option\", {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, option.label);\n  })));\n};\n\nexport default Select;","map":{"version":3,"sources":["C:\\Users\\Jake\\Documents\\Repositories\\parlaty\\app\\javascript\\src\\components\\Select\\index.js"],"names":["React","Text","styles","Select","label","color","error","options","props","container","input","map","option","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,MAAEC,KAAF,QAAEA,KAAF;AAAA,MAASC,KAAT,QAASA,KAAT;AAAA,MAAgBC,KAAhB,QAAgBA,KAAhB;AAAA,MAAuBC,OAAvB,QAAuBA,OAAvB;AAAA,MAAmCC,KAAnC;;AAAA,SACb;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACO,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,IAAI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEF,MAAM,CAACE,KAAxB;AAA+B,IAAA,KAAK,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CD,KAA9C,OAAsDE,KAAK,IAAI;AAAM,IAAA,SAAS,EAAEJ,MAAM,CAACI,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA/D,CADZ,EAEE;AAAO,IAAA,SAAS,EAAEJ,MAAM,CAACQ;AAAzB,KAAoCF,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAGE,gDAAYA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKD,OAAO,CAACI,GAAR,CAAY,UAAAC,MAAM;AAAA,WAAI;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACC,KAApB;AAA2B,MAAA,KAAK,EAAED,MAAM,CAACC,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDD,MAAM,CAACR,KAAxD,CAAJ;AAAA,GAAlB,CADL,CAHF,CADa;AAAA,CAAf;;AASA,eAAeD,MAAf","sourcesContent":["import React from 'react';\r\nimport Text from '../Text';\r\nimport styles from './index.module.css';\r\n\r\nconst Select = ({label, color, error, options, ...props}) =>\r\n  <div className={styles.container}>\r\n    {label && <Text className={styles.label} color={color}>{label} {error && <span className={styles.error}>This field is required</span>}</Text>}\r\n    <input className={styles.input} {...props} />\r\n    <select {...props}>\r\n        {options.map(option => <option key={option.value} value={option.value}>{option.label}</option>)}\r\n    </select>\r\n  </div>\r\n\r\nexport default Select;\r\n"]},"metadata":{},"sourceType":"module"}