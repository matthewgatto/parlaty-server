{"ast":null,"code":"var API = function () {\n  var _token = null;\n\n  var checkStatus = function checkStatus(res) {\n    if (res.status >= 200 && res.status < 300) return res;\n    throw new Error(res.status);\n  };\n\n  return {\n    setToken: function setToken(token) {\n      _token = token;\n    },\n    get: function get(url) {\n      return fetch(\"http://localhost:3000\".concat(url), {\n        method: 'GET',\n        headers: {\n          'Authorization': \"Bearer \".concat(_token)\n        }\n      }).then(checkStatus).then(function (response) {\n        return response.json();\n      });\n    },\n    post: function post(url, body) {\n      return fetch(\"http://localhost:3000\".concat(url), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \".concat(_token)\n        },\n        body: JSON.stringify(body)\n      }).then(checkStatus).then(function (response) {\n        return response.json();\n      });\n    },\n    patch: function patch(url, body) {\n      return fetch(\"http://localhost:3000\".concat(url), {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \".concat(_token)\n        },\n        body: JSON.stringify(body)\n      }).then(checkStatus).then(function (response) {\n        return response.json();\n      });\n    },\n    \"delete\": function _delete(url) {\n      return fetch(\"http://localhost:3000\".concat(url), {\n        method: 'DELETE',\n        headers: {\n          'Authorization': \"Bearer \".concat(_token)\n        }\n      });\n    }\n  };\n}();\n\nexport default API;","map":{"version":3,"sources":["C:\\Users\\Jake\\Documents\\Repositories\\parlaty\\app\\javascript\\src\\utils\\API.js"],"names":["API","_token","checkStatus","res","status","Error","setToken","token","get","url","fetch","method","headers","then","response","json","post","body","JSON","stringify","patch"],"mappings":"AAAA,IAAMA,GAAG,GAAI,YAAU;AACrB,MAAIC,MAAM,GAAG,IAAb;;AACA,MAAIC,WAAW,GAAG,SAAdA,WAAc,CAASC,GAAT,EAAa;AAC7B,QAAGA,GAAG,CAACC,MAAJ,IAAc,GAAd,IAAqBD,GAAG,CAACC,MAAJ,GAAa,GAArC,EAA0C,OAAOD,GAAP;AAC1C,UAAM,IAAIE,KAAJ,CAAUF,GAAG,CAACC,MAAd,CAAN;AACD,GAHD;;AAIA,SAAO;AACDE,IAAAA,QAAQ,EAAE,kBAAAC,KAAK,EAAI;AAACN,MAAAA,MAAM,GAAGM,KAAT;AAAe,KADlC;AAEDC,IAAAA,GAAG,EAAE,aAACC,GAAD;AAAA,aAASC,KAAK,gCAAyBD,GAAzB,GAAgC;AAC7CE,QAAAA,MAAM,EAAE,KADqC;AAE7CC,QAAAA,OAAO,EAAE;AACP,4CAA2BX,MAA3B;AADO;AAFoC,OAAhC,CAAL,CAMVY,IANU,CAMLX,WANK,EAMQW,IANR,CAMa,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OANrB,CAAT;AAAA,KAFJ;AASDC,IAAAA,IAAI,EAAE,cAACP,GAAD,EAAMQ,IAAN;AAAA,aAAeP,KAAK,gCAAyBD,GAAzB,GAAgC;AACpDE,QAAAA,MAAM,EAAE,MAD4C;AAEpDC,QAAAA,OAAO,EAAE;AACP,0BAAe,kBADR;AAEP,4CAA2BX,MAA3B;AAFO,SAF2C;AAMpDgB,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AAN8C,OAAhC,CAAL,CAQjBJ,IARiB,CAQZX,WARY,EAQCW,IARD,CAQM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OARd,CAAf;AAAA,KATL;AAkBDK,IAAAA,KAAK,EAAE,eAACX,GAAD,EAAMQ,IAAN;AAAA,aAAeP,KAAK,gCAAyBD,GAAzB,GAAgC;AACvDE,QAAAA,MAAM,EAAE,OAD+C;AAEvDC,QAAAA,OAAO,EAAE;AACP,0BAAe,kBADR;AAEP,4CAA2BX,MAA3B;AAFO,SAF8C;AAMvDgB,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AANiD,OAAhC,CAAL,CAQpBJ,IARoB,CAQfX,WARe,EAQFW,IARE,CAQG,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OARX,CAAf;AAAA,KAlBN;AA2BD,cAAQ,iBAACN,GAAD;AAAA,aAASC,KAAK,gCAAyBD,GAAzB,GAAgC;AAChDE,QAAAA,MAAM,EAAE,QADwC;AAEhDC,QAAAA,OAAO,EAAE;AACP,4CAA2BX,MAA3B;AADO;AAFuC,OAAhC,CAAd;AAAA;AA3BP,GAAP;AAmCD,CAzCW,EAAZ;;AA2CA,eAAeD,GAAf","sourcesContent":["const API = (function(){\r\n  var _token = null;\r\n  var checkStatus = function(res){\r\n    if(res.status >= 200 && res.status < 300) return res;\r\n    throw new Error(res.status)\r\n  }\r\n  return {\r\n        setToken: token => {_token = token},\r\n        get: (url) => fetch(`http://localhost:3000${url}`, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Authorization': `Bearer ${_token}`\r\n              }\r\n            }\r\n          ).then(checkStatus).then(response => response.json()),\r\n        post: (url, body) => fetch(`http://localhost:3000${url}`, {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type':'application/json',\r\n                'Authorization': `Bearer ${_token}`\r\n              },\r\n              body: JSON.stringify(body)\r\n            }\r\n          ).then(checkStatus).then(response => response.json()),\r\n        patch: (url, body) => fetch(`http://localhost:3000${url}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n              'Content-Type':'application/json',\r\n              'Authorization': `Bearer ${_token}`\r\n            },\r\n            body: JSON.stringify(body)\r\n          }\r\n        ).then(checkStatus).then(response => response.json()),\r\n        delete: (url) => fetch(`http://localhost:3000${url}`, {\r\n              method: 'DELETE',\r\n              headers: {\r\n                'Authorization': `Bearer ${_token}`\r\n              }\r\n            }\r\n          )\r\n    };\r\n})();\r\n\r\nexport default API;\r\n"]},"metadata":{},"sourceType":"module"}