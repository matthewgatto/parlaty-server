{"ast":null,"code":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport var ADD_STEP_REQUEST = \"ADD_STEP_REQUEST\";\nexport var ADD_STEP_REQUEST__SUCCESS = \"ADD_STEP_REQUEST__SUCCESS\";\nexport var ADD_STEP_REQUEST__FAILURE = \"ADD_STEP_REQUEST__FAILURE\";\nexport var REORDER_STEP = \"REORDER_STEP\";\nexport var REMOVE_IMAGE = \"REMOVE_IMAGE\";\nexport var CREATE_PROCEDURE_REQUEST = \"CREATE_PROCEDURE_REQUEST\";\nexport var CREATE_PROCEDURE_REQUEST__SUCCESS = \"CREATE_PROCEDURE_REQUEST__SUCCESS\";\nexport var CREATE_PROCEDURE_REQUEST__FAILURE = \"CREATE_PROCEDURE_REQUEST__FAILURE\";\nexport var DELETE_STEP = \"DELETE_STEP\";\nexport var DUPLICATE_STEP = \"DUPLICATE_STEP\";\nexport var addStep = function addStep() {\n  return {\n    type: ADD_STEP_REQUEST\n  };\n};\nexport var reorderStep = function reorderStep(fromIdx, toIdx) {\n  return {\n    type: REORDER_STEP,\n    payload: {\n      fromIdx: fromIdx,\n      toIdx: toIdx\n    }\n  };\n};\nexport var removeImage = function removeImage(idx) {\n  return {\n    type: REMOVE_IMAGE,\n    payload: idx\n  };\n};\nexport var createProcedure = function createProcedure() {\n  return {\n    type: CREATE_PROCEDURE_REQUEST\n  };\n};\nexport var deleteStep = function deleteStep(idx) {\n  return {\n    type: DELETE_STEP,\n    payload: idx\n  };\n};\nexport var duplicateStep = function duplicateStep(idx) {\n  return {\n    type: DUPLICATE_STEP,\n    payload: idx\n  };\n};\nvar initialState = {\n  description: '',\n  title: '',\n  steps: []\n};\nexport default function () {\n  var previousState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case ADD_STEP_REQUEST__SUCCESS:\n      return _objectSpread({}, previousState, {\n        steps: [].concat(_toConsumableArray(previousState.steps.slice(0, payload.step.number - 1)), [payload.step], _toConsumableArray(previousState.steps.slice(payload.step.number - 1)))\n      });\n\n    case REORDER_STEP:\n      var steps = [].concat(_toConsumableArray(previousState.steps.slice(0, payload.fromIdx)), _toConsumableArray(previousState.steps.slice(payload.fromIdx + 1)));\n\n      var step = _objectSpread({}, previousState.steps[payload.fromIdx]);\n\n      steps.splice(payload.toIdx, 0, step);\n      return _objectSpread({}, previousState, {\n        steps: steps\n      });\n\n    case REMOVE_IMAGE:\n      var stepsArray = previousState.steps.map(function (step, i) {\n        if (i === payload) {\n          var src = step.src,\n              rest = _objectWithoutProperties(step, [\"src\"]);\n\n          rest.image = null;\n          return rest;\n        }\n\n        return step;\n      });\n      return _objectSpread({}, previousState, {\n        steps: stepsArray\n      });\n\n    case DELETE_STEP:\n      return _objectSpread({}, previousState, {\n        steps: [].concat(_toConsumableArray(previousState.steps.slice(0, payload)), _toConsumableArray(previousState.steps.slice(payload + 1)))\n      });\n\n    case DUPLICATE_STEP:\n      return _objectSpread({}, previousState, {\n        steps: [].concat(_toConsumableArray(previousState.steps), [_objectSpread({}, previousState.steps[payload], {\n          number: previousState.steps.length + 1\n        })])\n      });\n\n    default:\n      return previousState;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Jake\\Documents\\Repositories\\parlaty\\app\\javascript\\src\\store\\procedure.js"],"names":["ADD_STEP_REQUEST","ADD_STEP_REQUEST__SUCCESS","ADD_STEP_REQUEST__FAILURE","REORDER_STEP","REMOVE_IMAGE","CREATE_PROCEDURE_REQUEST","CREATE_PROCEDURE_REQUEST__SUCCESS","CREATE_PROCEDURE_REQUEST__FAILURE","DELETE_STEP","DUPLICATE_STEP","addStep","type","reorderStep","fromIdx","toIdx","payload","removeImage","idx","createProcedure","deleteStep","duplicateStep","initialState","description","title","steps","previousState","slice","step","number","splice","stepsArray","map","i","src","rest","image","length"],"mappings":"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","sourcesContent":["export const ADD_STEP_REQUEST = \"ADD_STEP_REQUEST\";\r\nexport const ADD_STEP_REQUEST__SUCCESS = \"ADD_STEP_REQUEST__SUCCESS\";\r\nexport const ADD_STEP_REQUEST__FAILURE = \"ADD_STEP_REQUEST__FAILURE\";\r\nexport const REORDER_STEP = \"REORDER_STEP\";\r\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\r\nexport const CREATE_PROCEDURE_REQUEST = \"CREATE_PROCEDURE_REQUEST\";\r\nexport const CREATE_PROCEDURE_REQUEST__SUCCESS = \"CREATE_PROCEDURE_REQUEST__SUCCESS\";\r\nexport const CREATE_PROCEDURE_REQUEST__FAILURE = \"CREATE_PROCEDURE_REQUEST__FAILURE\";\r\nexport const DELETE_STEP = \"DELETE_STEP\";\r\nexport const DUPLICATE_STEP = \"DUPLICATE_STEP\";\r\n\r\n\r\nexport const addStep = () => ({type: ADD_STEP_REQUEST});\r\nexport const reorderStep = (fromIdx, toIdx) => ({type: REORDER_STEP, payload: {fromIdx, toIdx}})\r\nexport const removeImage = (idx) => ({type: REMOVE_IMAGE, payload: idx })\r\nexport const createProcedure = () => ({type: CREATE_PROCEDURE_REQUEST})\r\nexport const deleteStep = (idx) => ({type: DELETE_STEP, payload: idx})\r\nexport const duplicateStep = (idx) => ({type: DUPLICATE_STEP, payload: idx})\r\n\r\nconst initialState = { description: '', title: '', steps: [] };\r\nexport default function(previousState = initialState, { type, payload }){\r\n  switch (type) {\r\n    case ADD_STEP_REQUEST__SUCCESS:\r\n      return {\r\n        ...previousState,\r\n        steps: [...previousState.steps.slice(0, payload.step.number - 1), payload.step, ...previousState.steps.slice(payload.step.number - 1)]\r\n      }\r\n    case REORDER_STEP:\r\n      let steps = [...previousState.steps.slice(0, payload.fromIdx), ...previousState.steps.slice(payload.fromIdx + 1)];\r\n      let step = {...previousState.steps[payload.fromIdx]}\r\n      steps.splice(payload.toIdx, 0, step)\r\n      return {\r\n        ...previousState,\r\n        steps\r\n      }\r\n    case REMOVE_IMAGE:\r\n      let stepsArray = previousState.steps.map((step, i) => {\r\n        if(i === payload){\r\n          let { src, ...rest } = step;\r\n          rest.image = null;\r\n          return rest;\r\n        }\r\n        return step;\r\n      })\r\n      return {\r\n        ...previousState,\r\n        steps: stepsArray\r\n      }\r\n    case DELETE_STEP:\r\n      return {\r\n        ...previousState,\r\n        steps: [...previousState.steps.slice(0, payload), ...previousState.steps.slice(payload+1)]\r\n      }\r\n    case DUPLICATE_STEP:\r\n      return {\r\n        ...previousState,\r\n        steps: [...previousState.steps, {...previousState.steps[payload], number: previousState.steps.length + 1}]\r\n      }\r\n    default:\r\n      return previousState;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}