{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jake\\\\Documents\\\\Repositories\\\\parlaty\\\\app\\\\javascript\\\\src\\\\containers\\\\PositionSelect.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport SelectField from '../components/SelectField';\nimport { updateFormValue } from '../store/form';\n\nvar PositionSelect =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(PositionSelect, _React$PureComponent);\n\n  function PositionSelect() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PositionSelect);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PositionSelect)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.options = null;\n\n    _this.handleChange = function (_ref) {\n      var target = _ref.target;\n\n      _this.props.updateFormValue(\"step\", \"number\", target.value);\n    };\n\n    _this.makeOptions = function () {\n      var options = [];\n\n      for (var i = 1; i < _this.props.steps + 2; i++) {\n        options.push({\n          value: i,\n          label: \"Number \" + i\n        });\n      }\n\n      _this.options = options;\n    };\n\n    return _this;\n  }\n\n  _createClass(PositionSelect, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.options) {\n        this.makeOptions();\n      }\n\n      return React.createElement(SelectField, Object.assign({}, this.props, {\n        label: \"Number\",\n        options: this.options,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PositionSelect;\n}(React.PureComponent);\n\nexport default connect(function (_ref2, props) {\n  var form = _ref2.form,\n      procedure = _ref2.procedure;\n  return {\n    value: form.step ? form.step.values.number : '',\n    steps: procedure.steps ? procedure.steps.length : 0,\n    error: form.step && form.step.inputErrors && form.step.inputErrors.number\n  };\n}, {\n  updateFormValue: updateFormValue\n})(PositionSelect);","map":{"version":3,"sources":["C:\\Users\\Jake\\Documents\\Repositories\\parlaty\\app\\javascript\\src\\containers\\PositionSelect.js"],"names":["React","connect","SelectField","updateFormValue","PositionSelect","options","handleChange","target","props","value","makeOptions","i","steps","push","label","PureComponent","form","procedure","step","values","number","length","error","inputErrors"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,eAAT,QAAgC,eAAhC;;IAEMC,c;;;;;;;;;;;;;;;;;UACJC,O,GAAU,I;;UACVC,Y,GAAe,gBAAc;AAAA,UAAZC,MAAY,QAAZA,MAAY;;AAC3B,YAAKC,KAAL,CAAWL,eAAX,CAA2B,MAA3B,EAAmC,QAAnC,EAA6CI,MAAM,CAACE,KAApD;AACD,K;;UACDC,W,GAAc,YAAM;AAClB,UAAIL,OAAO,GAAG,EAAd;;AACA,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAKH,KAAL,CAAWI,KAAX,GAAmB,CAAvC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7CN,QAAAA,OAAO,CAACQ,IAAR,CAAa;AAACJ,UAAAA,KAAK,EAAEE,CAAR;AAAWG,UAAAA,KAAK,EAAE,YAAUH;AAA5B,SAAb;AACD;;AACD,YAAKN,OAAL,GAAeA,OAAf;AACD,K;;;;;;;6BACO;AACN,UAAG,CAAC,KAAKA,OAAT,EAAiB;AACf,aAAKK,WAAL;AACD;;AAED,aACE,oBAAC,WAAD,oBAAiB,KAAKF,KAAtB;AAA6B,QAAA,KAAK,EAAC,QAAnC;AAA4C,QAAA,OAAO,EAAE,KAAKH,OAA1D;AAAmE,QAAA,QAAQ,EAAE,KAAKC,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAGD;;;;EApB0BN,KAAK,CAACe,a;;AAuBnC,eAAed,OAAO,CACpB,iBAAoBO,KAApB;AAAA,MAAEQ,IAAF,SAAEA,IAAF;AAAA,MAAQC,SAAR,SAAQA,SAAR;AAAA,SAA+B;AAACR,IAAAA,KAAK,EAAEO,IAAI,CAACE,IAAL,GAAYF,IAAI,CAACE,IAAL,CAAUC,MAAV,CAAiBC,MAA7B,GAAsC,EAA9C;AAAkDR,IAAAA,KAAK,EAAEK,SAAS,CAACL,KAAV,GAAkBK,SAAS,CAACL,KAAV,CAAgBS,MAAlC,GAA2C,CAApG;AAAuGC,IAAAA,KAAK,EAAEN,IAAI,CAACE,IAAL,IAAaF,IAAI,CAACE,IAAL,CAAUK,WAAvB,IAAsCP,IAAI,CAACE,IAAL,CAAUK,WAAV,CAAsBH;AAA1K,GAA/B;AAAA,CADoB,EAEpB;AAAEjB,EAAAA,eAAe,EAAfA;AAAF,CAFoB,CAAP,CAGbC,cAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SelectField from '../components/SelectField';\r\nimport { updateFormValue } from '../store/form';\r\n\r\nclass PositionSelect extends React.PureComponent {\r\n  options = null;\r\n  handleChange = ({target}) => {\r\n    this.props.updateFormValue(\"step\", \"number\", target.value)\r\n  }\r\n  makeOptions = () => {\r\n    let options = [];\r\n    for (var i = 1; i < this.props.steps + 2; i++) {\r\n      options.push({value: i, label: \"Number \"+i})\r\n    }\r\n    this.options = options\r\n  }\r\n  render(){\r\n    if(!this.options){\r\n      this.makeOptions();\r\n    }\r\n\r\n    return(\r\n      <SelectField {...this.props} label=\"Number\" options={this.options} onChange={this.handleChange} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  ({form, procedure}, props) => ({value: form.step ? form.step.values.number : '', steps: procedure.steps ? procedure.steps.length : 0, error: form.step && form.step.inputErrors && form.step.inputErrors.number }),\r\n  { updateFormValue }\r\n)(PositionSelect);\r\n"]},"metadata":{},"sourceType":"module"}