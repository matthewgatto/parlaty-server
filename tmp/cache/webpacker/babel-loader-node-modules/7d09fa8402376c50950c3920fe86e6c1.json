{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport form from './form';\nimport procedure from './procedure';\nimport user from './user';\nimport rootSaga from '../sagas';\nvar sagaMiddleware = createSagaMiddleware();\n\nfunction getPreloadedState() {\n  var preloadedState = {};\n  var user = localStorage.getItem('user');\n\n  if (user) {\n    var userFromStorage = JSON.parse(user);\n    preloadedState.user = userFromStorage;\n    API.setToken(userFromStorage.jwt);\n  }\n\n  return preloadedState;\n}\n\nvar store = createStore(combineReducers({\n  form: form,\n  procedure: procedure,\n  user: user\n}), getPreloadedState(), applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["C:\\Users\\Jake\\Documents\\Repositories\\parlaty\\app\\javascript\\src\\store\\index.js"],"names":["createStore","applyMiddleware","combineReducers","createSagaMiddleware","form","procedure","user","rootSaga","sagaMiddleware","getPreloadedState","preloadedState","localStorage","getItem","userFromStorage","JSON","parse","API","setToken","jwt","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,IAAMC,cAAc,GAAGL,oBAAoB,EAA3C;;AAEA,SAASM,iBAAT,GAA4B;AAC1B,MAAIC,cAAc,GAAG,EAArB;AACA,MAAIJ,IAAI,GAAGK,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;;AACA,MAAGN,IAAH,EAAQ;AACN,QAAIO,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWT,IAAX,CAAtB;AACAI,IAAAA,cAAc,CAACJ,IAAf,GAAsBO,eAAtB;AACAG,IAAAA,GAAG,CAACC,QAAJ,CAAaJ,eAAe,CAACK,GAA7B;AACD;;AACD,SAAOR,cAAP;AACD;;AAED,IAAMS,KAAK,GAAGnB,WAAW,CACvBE,eAAe,CAAC;AACdE,EAAAA,IAAI,EAAJA,IADc;AAEdC,EAAAA,SAAS,EAATA,SAFc;AAGdC,EAAAA,IAAI,EAAJA;AAHc,CAAD,CADQ,EAMvBG,iBAAiB,EANM,EAOvBR,eAAe,CAACO,cAAD,CAPQ,CAAzB;AAUAA,cAAc,CAACY,GAAf,CAAmBb,QAAnB;AAEA,eAAeY,KAAf","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport form from './form';\r\nimport procedure from './procedure';\r\nimport user from './user';\r\nimport rootSaga from '../sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nfunction getPreloadedState(){\r\n  let preloadedState = {};\r\n  let user = localStorage.getItem('user');\r\n  if(user){\r\n    let userFromStorage = JSON.parse(user);\r\n    preloadedState.user = userFromStorage;\r\n    API.setToken(userFromStorage.jwt);\r\n  }\r\n  return preloadedState;\r\n}\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    form,\r\n    procedure,\r\n    user\r\n  }),\r\n  getPreloadedState(),\r\n  applyMiddleware(sagaMiddleware)\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}