{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jake\\\\Documents\\\\Repositories\\\\parlaty\\\\app\\\\javascript\\\\src\\\\containers\\\\CheckBox.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CheckBox from '../components/CheckBox';\nimport { updateFormValue } from '../store/form';\n\nvar CheckBoxContainer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CheckBoxContainer, _React$PureComponent);\n\n  function CheckBoxContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CheckBoxContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CheckBoxContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChange = function (_ref) {\n      var target = _ref.target;\n\n      _this.props.updateFormValue(_this.props.form, _this.props.name, target.checked);\n    };\n\n    return _this;\n  }\n\n  _createClass(CheckBoxContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CheckBox, Object.assign({}, this.props, {\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CheckBoxContainer;\n}(React.PureComponent);\n\nexport default connect(function (_ref2, props) {\n  var form = _ref2.form;\n  return {\n    value: form[props.form] ? form[props.form].values[props.name] : ''\n  };\n}, {\n  updateFormValue: updateFormValue\n})(CheckBoxContainer);","map":{"version":3,"sources":["C:\\Users\\Jake\\Documents\\Repositories\\parlaty\\app\\javascript\\src\\containers\\CheckBox.js"],"names":["React","connect","CheckBox","updateFormValue","CheckBoxContainer","handleChange","target","props","form","name","checked","PureComponent","value","values"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,eAAT,QAAgC,eAAhC;;IAEMC,iB;;;;;;;;;;;;;;;;;;UACJC,Y,GAAe,gBAAc;AAAA,UAAZC,MAAY,QAAZA,MAAY;;AAC3B,YAAKC,KAAL,CAAWJ,eAAX,CAA2B,MAAKI,KAAL,CAAWC,IAAtC,EAA4C,MAAKD,KAAL,CAAWE,IAAvD,EAA6DH,MAAM,CAACI,OAApE;AACD,K;;;;;;;6BACO;AACN,aACE,oBAAC,QAAD,oBAAc,KAAKH,KAAnB;AAA0B,QAAA,QAAQ,EAAE,KAAKF,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAGD;;;;EAR6BL,KAAK,CAACW,a;;AAWtC,eAAeV,OAAO,CACpB,iBAASM,KAAT;AAAA,MAAEC,IAAF,SAAEA,IAAF;AAAA,SAAoB;AAACI,IAAAA,KAAK,EAAEJ,IAAI,CAACD,KAAK,CAACC,IAAP,CAAJ,GAAmBA,IAAI,CAACD,KAAK,CAACC,IAAP,CAAJ,CAAiBK,MAAjB,CAAwBN,KAAK,CAACE,IAA9B,CAAnB,GAAyD;AAAjE,GAApB;AAAA,CADoB,EAEpB;AAAEN,EAAAA,eAAe,EAAfA;AAAF,CAFoB,CAAP,CAGbC,iBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CheckBox from '../components/CheckBox';\r\nimport { updateFormValue } from '../store/form';\r\n\r\nclass CheckBoxContainer extends React.PureComponent {\r\n  handleChange = ({target}) => {\r\n    this.props.updateFormValue(this.props.form, this.props.name, target.checked)\r\n  }\r\n  render(){\r\n    return(\r\n      <CheckBox {...this.props} onChange={this.handleChange} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  ({form}, props) => ({value: form[props.form] ? form[props.form].values[props.name] : ''}),\r\n  { updateFormValue }\r\n)(CheckBoxContainer);\r\n"]},"metadata":{},"sourceType":"module"}