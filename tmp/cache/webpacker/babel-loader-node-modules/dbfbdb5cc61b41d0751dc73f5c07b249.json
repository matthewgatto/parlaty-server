{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(createStepSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(procedureSagas);\n\nimport { takeEvery, put, call, select } from 'redux-saga/effects';\n\nfunction createStepSaga(_ref) {\n  var payload;\n  return _regeneratorRuntime.wrap(function createStepSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n\n          try {} catch (e) {\n            alert('Error');\n          }\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport default function procedureSagas() {\n  return _regeneratorRuntime.wrap(function procedureSagas$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(\"CREATE_STEP_REQUEST\", createStepSaga);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:\\Users\\Jake\\Documents\\Repositories\\parlaty\\app\\javascript\\src\\sagas\\procedure.js"],"names":["createStepSaga","procedureSagas","takeEvery","put","call","select","payload","e","alert"],"mappings":";;;;yBAEUA,c;;;yBAMeC,c;;AARzB,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,MAA/B,QAA6C,oBAA7C;;AAEA,SAAUL,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0BM,UAAAA,OAA1B,QAA0BA,OAA1B;;AACE,cAAI,CACH,CADD,CACE,OAAOC,CAAP,EAAU;AACVC,YAAAA,KAAK,CAAC,OAAD,CAAL;AACD;;AAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAe,SAAUP,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,SAAS,CAAC,qBAAD,EAAwBF,cAAxB,CAAf;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeEvery, put, call, select } from 'redux-saga/effects';\r\n\r\nfunction* createStepSaga({payload}){\r\n  try {\r\n  } catch (e) {\r\n    alert('Error')\r\n  }\r\n}\r\nexport default function* procedureSagas() {\r\n  yield takeEvery(\"CREATE_STEP_REQUEST\", createStepSaga);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}