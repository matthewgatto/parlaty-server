{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jake\\\\Documents\\\\Repositories\\\\parlaty\\\\app\\\\javascript\\\\src\\\\containers\\\\LoginForm.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport LoginForm from '../components/LoginForm';\nimport { login } from '../store/user';\n\nvar LoginFormContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginFormContainer, _React$Component);\n\n  function LoginFormContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginFormContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginFormContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.login({\n        email: _this.state.email,\n        password: _this.state.password\n      });\n    };\n\n    _this.handleInputChange = function (_ref) {\n      var target = _ref.target;\n      return _this.setState(_defineProperty({}, target.name, target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginFormContainer, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"error\", this.props.error);\n      return React.createElement(LoginForm, {\n        error: this.props.error,\n        onSubmit: this.handleSubmit,\n        onChange: this.handleInputChange,\n        email: this.state.email,\n        password: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return LoginFormContainer;\n}(React.Component);\n\nexport default connect(function (_ref2) {\n  var user = _ref2.user;\n  return {\n    error: user.error\n  };\n}, {\n  login: login\n})(LoginFormContainer);","map":{"version":3,"sources":["C:\\Users\\Jake\\Documents\\Repositories\\parlaty\\app\\javascript\\src\\containers\\LoginForm.js"],"names":["React","connect","LoginForm","login","LoginFormContainer","state","handleSubmit","e","preventDefault","props","email","password","handleInputChange","target","setState","name","value","console","log","error","Component","user"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,KAAT,QAAsB,eAAtB;;IAEMC,kB;;;;;;;;;;;;;;;;;UACJC,K,GAAQ,E;;UACRC,Y,GAAe,UAACC,CAAD,EAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKC,KAAL,CAAWN,KAAX,CAAiB;AAACO,QAAAA,KAAK,EAAE,MAAKL,KAAL,CAAWK,KAAnB;AAA0BC,QAAAA,QAAQ,EAAE,MAAKN,KAAL,CAAWM;AAA/C,OAAjB;AACD,K;;UACDC,iB,GAAoB;AAAA,UAAEC,MAAF,QAAEA,MAAF;AAAA,aAAc,MAAKC,QAAL,qBAAgBD,MAAM,CAACE,IAAvB,EAA8BF,MAAM,CAACG,KAArC,EAAd;AAAA,K;;;;;;;6BACZ;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKT,KAAL,CAAWU,KAAhC;AACA,aACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWU,KAA7B;AAAoC,QAAA,QAAQ,EAAE,KAAKb,YAAnD;AAAiE,QAAA,QAAQ,EAAE,KAAKM,iBAAhF;AAAmG,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWK,KAArH;AAA4H,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWM,QAAjJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EAZ8BX,KAAK,CAACoB,S;;AAevC,eAAenB,OAAO,CACpB;AAAA,MAAEoB,IAAF,SAAEA,IAAF;AAAA,SAAa;AAACF,IAAAA,KAAK,EAAEE,IAAI,CAACF;AAAb,GAAb;AAAA,CADoB,EAEpB;AAAEhB,EAAAA,KAAK,EAALA;AAAF,CAFoB,CAAP,CAGbC,kBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LoginForm from '../components/LoginForm';\r\nimport { login } from '../store/user';\r\n\r\nclass LoginFormContainer extends React.Component {\r\n  state = {}\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.login({email: this.state.email, password: this.state.password})\r\n  }\r\n  handleInputChange = ({target}) => this.setState({[target.name]: target.value})\r\n  render(){\r\n    console.log(\"error\", this.props.error);\r\n    return(\r\n      <LoginForm error={this.props.error} onSubmit={this.handleSubmit} onChange={this.handleInputChange} email={this.state.email} password={this.state.password} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  ({user}) => ({error: user.error}),\r\n  { login }\r\n)(LoginFormContainer);\r\n"]},"metadata":{},"sourceType":"module"}