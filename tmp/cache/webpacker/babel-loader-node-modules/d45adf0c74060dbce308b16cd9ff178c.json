{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport var SET_ERRORS = \"SET_ERRORS\";\nexport var RESET_FORM_STATE = \"RESET_FORM_STATE\";\nexport var UPDATE_FORM_VALUE = \"UPDATE_FORM_VALUE\";\nexport var START_PROCESSING = \"START_PROCESSING\";\nexport var SET_FORM_VALUES = \"SET_FORM_VALUES\";\nexport var UPDATE_CHECKLIST_VALUES = \"UPDATE_CHECKLIST_VALUES\";\nexport var OPEN_FORM = \"OPEN_FORM\";\nexport var setFormErrors = function setFormErrors(_ref) {\n  var form = _ref.form,\n      error = _ref.error,\n      inputErrors = _ref.inputErrors;\n  return {\n    type: SET_ERRORS,\n    payload: {\n      form: form,\n      error: error,\n      inputErrors: inputErrors\n    }\n  };\n};\nexport var updateFormValue = function updateFormValue(form, name, value) {\n  return {\n    type: UPDATE_FORM_VALUE,\n    payload: {\n      form: form,\n      name: name,\n      value: value\n    }\n  };\n};\nexport var startProcessing = function startProcessing(form) {\n  return {\n    type: START_PROCESSING,\n    payload: form\n  };\n};\nexport var setFormValues = function setFormValues(form, values) {\n  return {\n    type: SET_FORM_VALUES,\n    payload: {\n      form: form,\n      values: values\n    }\n  };\n};\nexport var updateChecklistValues = function updateChecklistValues(form, name, value) {\n  return {\n    type: UPDATE_CHECKLIST_VALUES,\n    payload: {\n      form: form,\n      name: name,\n      value: value\n    }\n  };\n};\nexport var openForm = function openForm(form, type, id, values) {\n  return {\n    type: OPEN_FORM,\n    payload: {\n      form: form,\n      type: type,\n      id: id,\n      values: values\n    }\n  };\n};\nvar initialState = {\n  type: null,\n  id: null\n};\nexport default function () {\n  var previousState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref2 = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref2.type,\n      payload = _ref2.payload;\n\n  switch (type) {\n    case SET_ERRORS:\n      return _objectSpread({}, previousState, _defineProperty({}, payload.form, _objectSpread({}, previousState[payload.form], {\n        error: payload.error,\n        inputErrors: payload.inputErrors || {},\n        isProcessing: false\n      })));\n\n    case UPDATE_FORM_VALUE:\n      return _objectSpread({}, previousState, _defineProperty({}, payload.form, _objectSpread({}, previousState[payload.form], {\n        values: _objectSpread({}, previousState[payload.form].values, _defineProperty({}, payload.name, payload.value)),\n        inputErrors: _objectSpread({}, previousState[payload.form].inputErrors, _defineProperty({}, payload.name, false))\n      })));\n\n    case START_PROCESSING:\n      return _objectSpread({}, previousState, _defineProperty({}, payload.form, _objectSpread({}, previousState[payload.form], {\n        isProcessing: true\n      })));\n\n    case SET_FORM_VALUES:\n      return _objectSpread({}, previousState, _defineProperty({}, payload.form, _objectSpread({}, previousState[payload.form], {\n        values: payload.values,\n        initialValues: payload.values\n      })));\n\n    case UPDATE_CHECKLIST_VALUES:\n      var form = previousState[payload.form];\n      var values = form.values;\n\n      if (values[payload.name]) {\n        var index = values[payload.name].findIndex(function (id) {\n          return payload.value == id;\n        });\n        return _objectSpread({}, previousState, _defineProperty({}, payload.form, _objectSpread({}, form, {\n          values: _objectSpread({}, values, _defineProperty({}, payload.name, index === -1 ? [].concat(_toConsumableArray(values[payload.name]), [payload.value]) : [].concat(_toConsumableArray(values[payload.name].slice(0, index)), _toConsumableArray(values[payload.name].slice(index + 1)))))\n        })));\n      } else {\n        return _objectSpread({}, previousState, _defineProperty({}, payload.form, _objectSpread({}, form, {\n          values: _objectSpread({}, values, _defineProperty({}, payload.name, [payload.value]))\n        })));\n      }\n\n    case OPEN_FORM:\n      return _objectSpread({}, previousState, _defineProperty({\n        type: payload.type,\n        id: payload.id\n      }, payload.form, {\n        values: payload.values || {},\n        initialValues: payload.values || {}\n      }));\n\n    default:\n      return previousState;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Jake\\Documents\\Repositories\\parlaty\\app\\javascript\\src\\store\\form.js"],"names":["SET_ERRORS","RESET_FORM_STATE","UPDATE_FORM_VALUE","START_PROCESSING","SET_FORM_VALUES","UPDATE_CHECKLIST_VALUES","OPEN_FORM","setFormErrors","form","error","inputErrors","type","payload","updateFormValue","name","value","startProcessing","setFormValues","values","updateChecklistValues","openForm","id","initialState","previousState","isProcessing","initialValues","index","findIndex","slice"],"mappings":"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","sourcesContent":["export const SET_ERRORS = \"SET_ERRORS\";\r\nexport const RESET_FORM_STATE = \"RESET_FORM_STATE\";\r\nexport const UPDATE_FORM_VALUE = \"UPDATE_FORM_VALUE\";\r\nexport const START_PROCESSING = \"START_PROCESSING\";\r\nexport const SET_FORM_VALUES = \"SET_FORM_VALUES\";\r\nexport const UPDATE_CHECKLIST_VALUES = \"UPDATE_CHECKLIST_VALUES\";\r\nexport const OPEN_FORM = \"OPEN_FORM\";\r\n\r\nexport const setFormErrors = ({form, error, inputErrors}) => ({ type: SET_ERRORS, payload: {form, error, inputErrors } })\r\nexport const updateFormValue = (form, name, value) => ({type: UPDATE_FORM_VALUE, payload: {form, name, value}});\r\nexport const startProcessing = (form) => ({type: START_PROCESSING, payload: form})\r\nexport const setFormValues = (form, values) => ({type: SET_FORM_VALUES, payload: {form, values}})\r\nexport const updateChecklistValues = (form, name, value) => ({ type: UPDATE_CHECKLIST_VALUES, payload: {form, name, value}})\r\nexport const openForm = (form, type, id, values)=> ({type: OPEN_FORM, payload: {form, type, id, values}})\r\n\r\nconst initialState = { type: null, id: null };\r\nexport default function(previousState = initialState, { type, payload }){\r\n  switch (type) {\r\n    case SET_ERRORS:\r\n      return {\r\n        ...previousState,\r\n        [payload.form]: {\r\n          ...previousState[payload.form],\r\n          error: payload.error,\r\n          inputErrors: payload.inputErrors ||  {},\r\n          isProcessing: false\r\n        }\r\n      }\r\n    case UPDATE_FORM_VALUE:\r\n      return {\r\n        ...previousState,\r\n        [payload.form]: {\r\n          ...previousState[payload.form],\r\n          values: {\r\n            ...previousState[payload.form].values,\r\n            [payload.name]: payload.value\r\n          },\r\n          inputErrors: {\r\n            ...previousState[payload.form].inputErrors,\r\n            [payload.name]: false\r\n          }\r\n        }\r\n      }\r\n    case START_PROCESSING:\r\n      return {\r\n        ...previousState,\r\n        [payload.form]: {\r\n          ...previousState[payload.form],\r\n          isProcessing: true\r\n        }\r\n      }\r\n    case SET_FORM_VALUES:\r\n      return {\r\n        ...previousState,\r\n        [payload.form]: {\r\n          ...previousState[payload.form],\r\n          values: payload.values,\r\n          initialValues: payload.values\r\n        }\r\n      };\r\n    case UPDATE_CHECKLIST_VALUES:\r\n      let form = previousState[payload.form];\r\n      let values = form.values\r\n      if(values[payload.name]){\r\n        let index = values[payload.name].findIndex(id => payload.value == id);\r\n        return {\r\n          ...previousState,\r\n          [payload.form]: {\r\n            ...form,\r\n            values: {\r\n              ...values,\r\n              [payload.name]: index === -1 ? [...values[payload.name], payload.value] : [...values[payload.name].slice(0, index), ...values[payload.name].slice(index + 1)]\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        return {\r\n          ...previousState,\r\n          [payload.form]: {\r\n            ...form,\r\n            values: {\r\n              ...values,\r\n              [payload.name]: [payload.value]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    case OPEN_FORM:\r\n      return {\r\n        ...previousState,\r\n        type: payload.type,\r\n        id: payload.id,\r\n        [payload.form]: {\r\n          values: payload.values || {},\r\n          initialValues: payload.values || {}\r\n        }\r\n      }\r\n    default:\r\n      return previousState;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}