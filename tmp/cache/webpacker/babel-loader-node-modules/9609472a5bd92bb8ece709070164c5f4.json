{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jake\\\\Documents\\\\Repositories\\\\parlaty\\\\app\\\\javascript\\\\src\\\\containers\\\\ProcedureSteps.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ProcedureSteps from '../components/ProcedureSteps';\nimport { reorderStep } from '../store/procedure';\n\nvar ProcedureStepsContainer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ProcedureStepsContainer, _React$PureComponent);\n\n  function ProcedureStepsContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProcedureStepsContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProcedureStepsContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.dragging = null;\n    _this.draggingOver = null;\n\n    _this.handleDragStart = function (e, number) {\n      e.dataTransfer.setData(\"text/html\", e.target);\n      e.dataTransfer.setDragImage(e.target, 20, 20);\n      _this.dragging = number;\n    };\n\n    _this.handleDragEnd = function (number) {\n      if (_this.dragging && _this.draggingOver && _this.dragging !== _this.draggingOver) {\n        _this.props.reorderStep(_this.dragging, _this.draggingOver);\n      }\n\n      _this.dragging = null;\n      _this.draggingOver = null;\n    };\n\n    _this.handleDragOver = function (number) {\n      _this.draggingOver = number;\n    };\n\n    return _this;\n  }\n\n  _createClass(ProcedureStepsContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ProcedureSteps, {\n        steps: this.props.steps,\n        onDragOver: this.handleDragOver,\n        onDragStart: this.handleDragStart,\n        onDragEnd: this.handleDragEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ProcedureStepsContainer;\n}(React.PureComponent);\n\nexport default connect(function (_ref) {\n  var procedure = _ref.procedure;\n  return {\n    steps: procedure.steps\n  };\n}, {\n  reorderStep: reorderStep\n})(ProcedureStepsContainer);","map":{"version":3,"sources":["C:\\Users\\Jake\\Documents\\Repositories\\parlaty\\app\\javascript\\src\\containers\\ProcedureSteps.js"],"names":["React","connect","ProcedureSteps","reorderStep","ProcedureStepsContainer","dragging","draggingOver","handleDragStart","e","number","dataTransfer","setData","target","setDragImage","handleDragEnd","props","handleDragOver","steps","PureComponent","procedure"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,WAAT,QAA4B,oBAA5B;;IAEMC,uB;;;;;;;;;;;;;;;;;UACJC,Q,GAAW,I;UACXC,Y,GAAe,I;;UACfC,e,GAAkB,UAACC,CAAD,EAAIC,MAAJ,EAAe;AAC/BD,MAAAA,CAAC,CAACE,YAAF,CAAeC,OAAf,CAAuB,WAAvB,EAAoCH,CAAC,CAACI,MAAtC;AACAJ,MAAAA,CAAC,CAACE,YAAF,CAAeG,YAAf,CAA4BL,CAAC,CAACI,MAA9B,EAAsC,EAAtC,EAA0C,EAA1C;AACA,YAAKP,QAAL,GAAgBI,MAAhB;AACD,K;;UACDK,a,GAAgB,UAACL,MAAD,EAAY;AAC1B,UAAG,MAAKJ,QAAL,IAAiB,MAAKC,YAAtB,IAAsC,MAAKD,QAAL,KAAkB,MAAKC,YAAhE,EAA6E;AAC3E,cAAKS,KAAL,CAAWZ,WAAX,CAAuB,MAAKE,QAA5B,EAAsC,MAAKC,YAA3C;AACD;;AACD,YAAKD,QAAL,GAAgB,IAAhB;AACA,YAAKC,YAAL,GAAoB,IAApB;AACD,K;;UACDU,c,GAAiB,UAACP,MAAD,EAAY;AAC3B,YAAKH,YAAL,GAAoBG,MAApB;AACD,K;;;;;;;6BACO;AACN,aACE,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAE,KAAKM,KAAL,CAAWE,KAAlC;AAAyC,QAAA,UAAU,EAAE,KAAKD,cAA1D;AAA0E,QAAA,WAAW,EAAE,KAAKT,eAA5F;AAA6G,QAAA,SAAS,EAAE,KAAKO,aAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EAtBmCd,KAAK,CAACkB,a;;AAyB5C,eAAejB,OAAO,CACpB;AAAA,MAAEkB,SAAF,QAAEA,SAAF;AAAA,SAAkB;AAACF,IAAAA,KAAK,EAAEE,SAAS,CAACF;AAAlB,GAAlB;AAAA,CADoB,EAEpB;AAAEd,EAAAA,WAAW,EAAXA;AAAF,CAFoB,CAAP,CAGbC,uBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport ProcedureSteps from '../components/ProcedureSteps';\r\nimport { reorderStep } from '../store/procedure';\r\n\r\nclass ProcedureStepsContainer extends React.PureComponent {\r\n  dragging = null;\r\n  draggingOver = null\r\n  handleDragStart = (e, number) => {\r\n    e.dataTransfer.setData(\"text/html\", e.target);\r\n    e.dataTransfer.setDragImage(e.target, 20, 20);\r\n    this.dragging = number;\r\n  }\r\n  handleDragEnd = (number) => {\r\n    if(this.dragging && this.draggingOver && this.dragging !== this.draggingOver){\r\n      this.props.reorderStep(this.dragging, this.draggingOver);\r\n    }\r\n    this.dragging = null;\r\n    this.draggingOver = null;\r\n  }\r\n  handleDragOver = (number) => {\r\n    this.draggingOver = number\r\n  }\r\n  render(){\r\n    return(\r\n      <ProcedureSteps steps={this.props.steps} onDragOver={this.handleDragOver} onDragStart={this.handleDragStart} onDragEnd={this.handleDragEnd} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  ({procedure}) => ({steps: procedure.steps}),\r\n  { reorderStep }\r\n)(ProcedureStepsContainer)\r\n"]},"metadata":{},"sourceType":"module"}