{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport var SET_ERRORS = \"SET_ERRORS\";\nexport var RESET_FORM_STATE = \"RESET_FORM_STATE\";\nexport var UPDATE_FORM_VALUE = \"UPDATE_FORM_VALUE\";\nexport var START_REQUEST_PROCESSING = \"START_REQUEST_PROCESSING\";\nexport var SET_FORM_VALUES = \"SET_FORM_VALUES\";\nexport var UPDATE_CHECKLIST_VALUES = \"UPDATE_CHECKLIST_VALUES\";\nexport var OPEN_FORM = \"OPEN_FORM\";\nexport var START_PROCESSING = \"START_PROCESSING\";\nexport var setFormErrors = function setFormErrors(_ref) {\n  var error = _ref.error,\n      inputErrors = _ref.inputErrors;\n  return {\n    type: SET_ERRORS,\n    payload: {\n      error: error,\n      inputErrors: inputErrors\n    }\n  };\n};\nexport var resetFormState = function resetFormState() {\n  return {\n    type: RESET_FORM_STATE\n  };\n};\nexport var updateFormValue = function updateFormValue(name, value) {\n  return {\n    type: UPDATE_FORM_VALUE,\n    payload: {\n      name: name,\n      value: value\n    }\n  };\n};\nexport var startRequestProcessing = function startRequestProcessing() {\n  return {\n    type: START_REQUEST_PROCESSING\n  };\n};\nexport var setFormValues = function setFormValues(values) {\n  return {\n    type: SET_FORM_VALUES,\n    payload: values\n  };\n};\nexport var updateChecklistValues = function updateChecklistValues(name, value) {\n  return {\n    type: UPDATE_CHECKLIST_VALUES,\n    payload: {\n      name: name,\n      value: value\n    }\n  };\n};\nexport var openForm = function openForm(type, id) {\n  return {\n    type: OPEN_FORM,\n    payload: {\n      type: type,\n      id: id\n    }\n  };\n};\nexport var startProcessing = function startProcessing() {\n  return {\n    type: START_PROCESSING\n  };\n};\nvar initialState = {\n  type: null,\n  id: null\n};\nexport default function () {\n  var previousState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref2 = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref2.type,\n      payload = _ref2.payload;\n\n  switch (type) {\n    case SET_ERRORS:\n      return _objectSpread({}, previousState, {\n        error: payload.error,\n        inputErrors: payload.inputErrors || {},\n        isProcessing: false\n      });\n\n    case UPDATE_FORM_VALUE:\n      return _objectSpread({}, previousState, {\n        values: _objectSpread({}, previousState.values, _defineProperty({}, payload.name, payload.value)),\n        inputErrors: _objectSpread({}, previousState.inputErrors, _defineProperty({}, payload.name, false))\n      });\n\n    case START_REQUEST_PROCESSING:\n      return _objectSpread({}, previousState, {\n        isProcessing: true\n      });\n\n    case RESET_FORM_STATE:\n      return initialState;\n\n    case SET_FORM_VALUES:\n      return _objectSpread({}, previousState, {\n        values: payload,\n        initialValues: payload\n      });\n\n    case UPDATE_CHECKLIST_VALUES:\n      if (previousState.values[payload.name]) {\n        var index = previousState.values[payload.name].findIndex(function (id) {\n          return payload.value == id;\n        });\n        return _objectSpread({}, previousState, {\n          values: _objectSpread({}, previousState.values, _defineProperty({}, payload.name, index === -1 ? [].concat(_toConsumableArray(previousState.values[payload.name]), [payload.value]) : [].concat(_toConsumableArray(previousState.values[payload.name].slice(0, index)), _toConsumableArray(previousState.values[payload.name].slice(index + 1)))))\n        });\n      } else {\n        return _objectSpread({}, previousState, {\n          values: _objectSpread({}, previousState.values, _defineProperty({}, payload.name, [payload.value]))\n        });\n      }\n\n    case OPEN_FORM:\n      return _objectSpread({}, initialState, {\n        initialValues: payload.initialValues || {},\n        values: payload.initialValues || {}\n      });\n\n    case START_PROCESSING:\n      return _objectSpread({}, previousState, {\n        error: null,\n        isProcessing: true\n      });\n\n    default:\n      return previousState;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Jake\\Documents\\Repositories\\parlaty\\app\\javascript\\src\\store\\form.js"],"names":["SET_ERRORS","RESET_FORM_STATE","UPDATE_FORM_VALUE","START_REQUEST_PROCESSING","SET_FORM_VALUES","UPDATE_CHECKLIST_VALUES","OPEN_FORM","START_PROCESSING","setFormErrors","error","inputErrors","type","payload","resetFormState","updateFormValue","name","value","startRequestProcessing","setFormValues","values","updateChecklistValues","openForm","id","startProcessing","initialState","previousState","isProcessing","initialValues","index","findIndex","slice"],"mappings":"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","sourcesContent":["export const SET_ERRORS = \"SET_ERRORS\";\r\nexport const RESET_FORM_STATE = \"RESET_FORM_STATE\";\r\nexport const UPDATE_FORM_VALUE = \"UPDATE_FORM_VALUE\";\r\nexport const START_REQUEST_PROCESSING = \"START_REQUEST_PROCESSING\";\r\nexport const SET_FORM_VALUES = \"SET_FORM_VALUES\";\r\nexport const UPDATE_CHECKLIST_VALUES = \"UPDATE_CHECKLIST_VALUES\";\r\nexport const OPEN_FORM = \"OPEN_FORM\";\r\nexport const START_PROCESSING = \"START_PROCESSING\";\r\n\r\nexport const setFormErrors = ({error, inputErrors}) => ({ type: SET_ERRORS, payload: { error, inputErrors } })\r\nexport const resetFormState  = () => ({type: RESET_FORM_STATE });\r\nexport const updateFormValue = (name, value) => ({type: UPDATE_FORM_VALUE, payload: {name, value}});\r\nexport const startRequestProcessing = () => ({type: START_REQUEST_PROCESSING})\r\nexport const setFormValues = (values) => ({type: SET_FORM_VALUES, payload: values})\r\nexport const updateChecklistValues = (name, value) => ({ type: UPDATE_CHECKLIST_VALUES, payload: {name, value}})\r\nexport const openForm = (type, id)=> ({type: OPEN_FORM, payload: {type, id}})\r\nexport const startProcessing = () => ({type: START_PROCESSING})\r\n\r\nconst initialState = { type: null, id: null };\r\nexport default function(previousState = initialState, { type, payload }){\r\n  switch (type) {\r\n    case SET_ERRORS:\r\n      return {\r\n        ...previousState,\r\n        error: payload.error,\r\n        inputErrors: payload.inputErrors ||  {},\r\n        isProcessing: false\r\n      }\r\n    case UPDATE_FORM_VALUE:\r\n      return {\r\n        ...previousState,\r\n        values: {\r\n          ...previousState.values,\r\n          [payload.name]: payload.value\r\n        },\r\n        inputErrors: {\r\n          ...previousState.inputErrors,\r\n          [payload.name]: false\r\n        }\r\n      }\r\n    case START_REQUEST_PROCESSING:\r\n      return {\r\n        ...previousState,\r\n        isProcessing: true\r\n      }\r\n    case RESET_FORM_STATE:\r\n      return initialState;\r\n    case SET_FORM_VALUES:\r\n      return {\r\n        ...previousState,\r\n        values: payload,\r\n        initialValues: payload\r\n      };\r\n    case UPDATE_CHECKLIST_VALUES:\r\n      if(previousState.values[payload.name]){\r\n        let index = previousState.values[payload.name].findIndex(id => payload.value == id);\r\n        return {\r\n          ...previousState,\r\n          values: {\r\n            ...previousState.values,\r\n            [payload.name]: index === -1 ? [...previousState.values[payload.name], payload.value] : [...previousState.values[payload.name].slice(0, index), ...previousState.values[payload.name].slice(index + 1)]\r\n          }\r\n        }\r\n      } else {\r\n        return {\r\n          ...previousState,\r\n          values: {\r\n            ...previousState.values,\r\n            [payload.name]: [payload.value]\r\n          }\r\n        }\r\n      }\r\n    case OPEN_FORM:\r\n      return {\r\n        ...initialState,\r\n        initialValues: payload.initialValues || {},\r\n        values: payload.initialValues || {}\r\n      }\r\n    case START_PROCESSING:\r\n      return {\r\n        ...previousState,\r\n        error: null,\r\n        isProcessing: true\r\n      }\r\n    default:\r\n      return previousState;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}