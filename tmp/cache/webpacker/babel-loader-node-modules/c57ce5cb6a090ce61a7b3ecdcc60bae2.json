{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loginSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSagas);\n\nimport { takeEvery, put, call, select } from 'redux-saga/effects';\nimport { setFormErrors } from '../store/form';\nimport { LOGIN_REQUEST, LOGIN_REQUEST__SUCCESS, LOGIN_REQUEST__FAILURE } from '../store/user';\nimport API from '../utils/API';\n\nfunction loginSaga(_ref) {\n  var payload, response;\n  return _regeneratorRuntime.wrap(function loginSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n\n          if (!(payload.email && payload.email.length && payload.password && payload.password.length)) {\n            _context.next = 19;\n            break;\n          }\n\n          console.log(\"LOGIN ACTION PAYLOAD\", payload);\n          _context.next = 6;\n          return call(API.post, '/login', {\n            email: payload.email,\n            password: payload.password\n          });\n\n        case 6:\n          response = _context.sent;\n          console.log(\"RESPONSE\", response);\n\n          if (!response.jwt) {\n            _context.next = 15;\n            break;\n          }\n\n          API.setToken(response.jwt);\n          localStorage.setItem('user', JSON.stringify(response));\n          _context.next = 13;\n          return put({\n            type: LOGIN_REQUEST__SUCCESS,\n            payload: response\n          });\n\n        case 13:\n          _context.next = 17;\n          break;\n\n        case 15:\n          _context.next = 17;\n          return put({\n            type: LOGIN_REQUEST__FAILURE\n          });\n\n        case 17:\n          _context.next = 21;\n          break;\n\n        case 19:\n          _context.next = 21;\n          return put({\n            type: LOGIN_REQUEST__FAILURE\n          });\n\n        case 21:\n          _context.next = 28;\n          break;\n\n        case 23:\n          _context.prev = 23;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(\"ERROR\", _context.t0);\n          _context.next = 28;\n          return put({\n            type: LOGIN_REQUEST__FAILURE\n          });\n\n        case 28:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 23]]);\n}\n\nexport default function userSagas() {\n  return _regeneratorRuntime.wrap(function userSagas$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(LOGIN_REQUEST, loginSaga);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:\\Users\\Jake\\Documents\\Repositories\\parlaty\\app\\javascript\\src\\sagas\\user.js"],"names":["loginSaga","userSagas","takeEvery","put","call","select","setFormErrors","LOGIN_REQUEST","LOGIN_REQUEST__SUCCESS","LOGIN_REQUEST__FAILURE","API","payload","email","length","password","console","log","post","response","jwt","setToken","localStorage","setItem","JSON","stringify","type"],"mappings":";;;;yBASUA,S;;;yBAsBeC,S;;AA/BzB,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,MAA/B,QAA6C,oBAA7C;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SACEC,aADF,EAEEC,sBAFF,EAGEC,sBAHF,QAIO,eAJP;AAKA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,SAAUV,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqBW,UAAAA,OAArB,QAAqBA,OAArB;AAAA;;AAAA,gBAEOA,OAAO,CAACC,KAAR,IAAiBD,OAAO,CAACC,KAAR,CAAcC,MAA/B,IAAyCF,OAAO,CAACG,QAAjD,IAA6DH,OAAO,CAACG,QAAR,CAAiBD,MAFrF;AAAA;AAAA;AAAA;;AAGME,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCL,OAApC;AAHN;AAIqB,iBAAMP,IAAI,CAACM,GAAG,CAACO,IAAL,EAAW,QAAX,EAAqB;AAACL,YAAAA,KAAK,EAAED,OAAO,CAACC,KAAhB;AAAuBE,YAAAA,QAAQ,EAAEH,OAAO,CAACG;AAAzC,WAArB,CAAV;;AAJrB;AAIUI,UAAAA,QAJV;AAKMH,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,QAAxB;;AALN,eAMSA,QAAQ,CAACC,GANlB;AAAA;AAAA;AAAA;;AAOQT,UAAAA,GAAG,CAACU,QAAJ,CAAaF,QAAQ,CAACC,GAAtB;AACAE,UAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAA7B;AARR;AASQ,iBAAMf,GAAG,CAAC;AAACsB,YAAAA,IAAI,EAAEjB,sBAAP;AAA+BG,YAAAA,OAAO,EAAEO;AAAxC,WAAD,CAAT;;AATR;AAAA;AAAA;;AAAA;AAAA;AAWQ,iBAAMf,GAAG,CAAC;AAACsB,YAAAA,IAAI,EAAEhB;AAAP,WAAD,CAAT;;AAXR;AAAA;AAAA;;AAAA;AAAA;AAeM,iBAAMN,GAAG,CAAC;AAACsB,YAAAA,IAAI,EAAEhB;AAAP,WAAD,CAAT;;AAfN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkBIM,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAlBJ;AAmBI,iBAAMb,GAAG,CAAC;AAACsB,YAAAA,IAAI,EAAEhB;AAAP,WAAD,CAAT;;AAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsBA,eAAe,SAAUR,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,SAAS,CAACK,aAAD,EAAgBP,SAAhB,CAAf;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeEvery, put, call, select } from 'redux-saga/effects';\r\nimport { setFormErrors } from '../store/form';\r\nimport {\r\n  LOGIN_REQUEST,\r\n  LOGIN_REQUEST__SUCCESS,\r\n  LOGIN_REQUEST__FAILURE\r\n} from '../store/user';\r\nimport API from '../utils/API';\r\n\r\nfunction* loginSaga({payload}){\r\n  try {\r\n    if(payload.email && payload.email.length && payload.password && payload.password.length){\r\n      console.log(\"LOGIN ACTION PAYLOAD\", payload);\r\n      let response = yield call(API.post, '/login', {email: payload.email, password: payload.password});\r\n      console.log(\"RESPONSE\", response);\r\n      if(response.jwt){\r\n        API.setToken(response.jwt);\r\n        localStorage.setItem('user', JSON.stringify(response))\r\n        yield put({type: LOGIN_REQUEST__SUCCESS, payload: response})\r\n      } else {\r\n        yield put({type: LOGIN_REQUEST__FAILURE})\r\n      }\r\n\r\n    } else {\r\n      yield put({type: LOGIN_REQUEST__FAILURE})\r\n    }\r\n  } catch (e) {\r\n    console.log(\"ERROR\", e);\r\n    yield put({type: LOGIN_REQUEST__FAILURE})\r\n  }\r\n}\r\nexport default function* userSagas() {\r\n  yield takeEvery(LOGIN_REQUEST, loginSaga);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}