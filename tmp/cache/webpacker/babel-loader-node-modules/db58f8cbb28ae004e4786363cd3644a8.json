{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nexport var ADD_IMAGE = \"ADD_IMAGE\";\nexport var addImage = function addImage() {\n  return {\n    type: ADD_IMAGE,\n    payload: image\n  };\n};\nvar initialState = [];\nexport default function () {\n  var previousState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case ADD_IMAGE:\n      return [].concat(_toConsumableArray(previousState), [payload]);\n\n    default:\n      return previousState;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Jake\\Documents\\Repositories\\parlaty\\app\\javascript\\src\\store\\image.js"],"names":["ADD_IMAGE","addImage","type","payload","image","initialState","previousState"],"mappings":";;;;;;;;AAAA,OAAO,IAAMA,SAAS,GAAG,WAAlB;AAEP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAO;AAACC,IAAAA,IAAI,EAAEF,SAAP;AAAkBG,IAAAA,OAAO,EAAEC;AAA3B,GAAP;AAAA,CAAjB;AAEP,IAAMC,YAAY,GAAG,EAArB;AACA,eAAe,YAAyD;AAAA,MAAhDC,aAAgD,uEAAhCD,YAAgC;;AAAA;AAAA,MAAhBH,IAAgB,QAAhBA,IAAgB;AAAA,MAAVC,OAAU,QAAVA,OAAU;;AACtE,UAAQD,IAAR;AACE,SAAKF,SAAL;AACE,0CAAWM,aAAX,IAA0BH,OAA1B;;AACF;AACE,aAAOG,aAAP;AAJJ;AAMD","sourcesContent":["export const ADD_IMAGE = \"ADD_IMAGE\";\r\n\r\nexport const addImage = () => ({type: ADD_IMAGE, payload: image});\r\n\r\nconst initialState = [];\r\nexport default function(previousState = initialState, { type, payload }){\r\n  switch (type) {\r\n    case ADD_IMAGE:\r\n      return [...previousState, payload]\r\n    default:\r\n      return previousState;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}