{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jake\\\\Documents\\\\Repositories\\\\parlaty\\\\app\\\\javascript\\\\src\\\\containers\\\\FileInput.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FileInput from '../components/FileInput';\nimport { updateFormValue } from '../store/form';\n\nvar FileInputContainer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(FileInputContainer, _React$PureComponent);\n\n  function FileInputContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FileInputContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FileInputContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.inputRef = null;\n    _this.fileName = null;\n\n    _this.onChange = function (_ref) {\n      var target = _ref.target;\n      _this.fileName = target.files[0].name;\n\n      _this.props.updateFormValue(_this.props.form, _this.props.name, target.files[0]);\n    };\n\n    _this.onClick = function () {\n      if (_this.props.hasValue) {\n        _this.fileName = null;\n\n        _this.props.updateFormValue(_this.props.form, _this.props.name, null);\n      } else {\n        _this.inputRef.click();\n      }\n    };\n\n    _this.setInputRef = function (e) {\n      _this.inputRef = e;\n    };\n\n    return _this;\n  }\n\n  _createClass(FileInputContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          updateFormValue = _this$props.updateFormValue,\n          rest = _objectWithoutProperties(_this$props, [\"updateFormValue\"]);\n\n      return React.createElement(FileInput, Object.assign({}, rest, {\n        onChange: this.onChange,\n        hasValue: this.props.hasValue,\n        fileName: this.fileName,\n        onClick: this.onClick,\n        setInputRef: this.setInputRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FileInputContainer;\n}(React.PureComponent);\n\nexport default connect(function (_ref2, props) {\n  var form = _ref2.form;\n  return {\n    hasValue: form[props.form] && form[props.form].values[props.name] ? true : false,\n    value: form[props.form] ? form[props.form].values[props.name] : '',\n    error: form[props.form] && form[props.form].inputErrors && form[props.form].inputErrors[props.name]\n  };\n}, {\n  updateFormValue: updateFormValue\n})(FileInputContainer);","map":{"version":3,"sources":["C:\\Users\\Jake\\Documents\\Repositories\\parlaty\\app\\javascript\\src\\containers\\FileInput.js"],"names":["React","connect","FileInput","updateFormValue","FileInputContainer","inputRef","fileName","onChange","target","files","name","props","form","onClick","hasValue","click","setInputRef","e","rest","PureComponent","values","value","error","inputErrors"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,eAAT,QAAgC,eAAhC;;IAEMC,kB;;;;;;;;;;;;;;;;;UACJC,Q,GAAW,I;UACXC,Q,GAAW,I;;UACXC,Q,GAAW,gBAAc;AAAA,UAAZC,MAAY,QAAZA,MAAY;AACvB,YAAKF,QAAL,GAAgBE,MAAM,CAACC,KAAP,CAAa,CAAb,EAAgBC,IAAhC;;AACA,YAAKC,KAAL,CAAWR,eAAX,CAA2B,MAAKQ,KAAL,CAAWC,IAAtC,EAA4C,MAAKD,KAAL,CAAWD,IAAvD,EAA6DF,MAAM,CAACC,KAAP,CAAa,CAAb,CAA7D;AACD,K;;UACDI,O,GAAU,YAAM;AACd,UAAG,MAAKF,KAAL,CAAWG,QAAd,EAAuB;AACrB,cAAKR,QAAL,GAAgB,IAAhB;;AACA,cAAKK,KAAL,CAAWR,eAAX,CAA2B,MAAKQ,KAAL,CAAWC,IAAtC,EAA4C,MAAKD,KAAL,CAAWD,IAAvD,EAA6D,IAA7D;AACD,OAHD,MAGO;AACL,cAAKL,QAAL,CAAcU,KAAd;AACD;AACF,K;;UACDC,W,GAAc,UAACC,CAAD,EAAO;AACnB,YAAKZ,QAAL,GAAgBY,CAAhB;AACD,K;;;;;;;6BACO;AAAA,wBAC6B,KAAKN,KADlC;AAAA,UACAR,eADA,eACAA,eADA;AAAA,UACoBe,IADpB;;AAEN,aACE,oBAAC,SAAD,oBAAeA,IAAf;AAAqB,QAAA,QAAQ,EAAE,KAAKX,QAApC;AAA8C,QAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWG,QAAnE;AAA6E,QAAA,QAAQ,EAAE,KAAKR,QAA5F;AAAsG,QAAA,OAAO,EAAE,KAAKO,OAApH;AAA6H,QAAA,WAAW,EAAE,KAAKG,WAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAGD;;;;EAvB8BhB,KAAK,CAACmB,a;;AA0BvC,eAAelB,OAAO,CACpB,iBAASU,KAAT;AAAA,MAAEC,IAAF,SAAEA,IAAF;AAAA,SAAoB;AAACE,IAAAA,QAAQ,EAAEF,IAAI,CAACD,KAAK,CAACC,IAAP,CAAJ,IAAoBA,IAAI,CAACD,KAAK,CAACC,IAAP,CAAJ,CAAiBQ,MAAjB,CAAwBT,KAAK,CAACD,IAA9B,CAApB,GAA0D,IAA1D,GAAiE,KAA5E;AAAmFW,IAAAA,KAAK,EAAET,IAAI,CAACD,KAAK,CAACC,IAAP,CAAJ,GAAmBA,IAAI,CAACD,KAAK,CAACC,IAAP,CAAJ,CAAiBQ,MAAjB,CAAwBT,KAAK,CAACD,IAA9B,CAAnB,GAAyD,EAAnJ;AAAuJY,IAAAA,KAAK,EAAEV,IAAI,CAACD,KAAK,CAACC,IAAP,CAAJ,IAAoBA,IAAI,CAACD,KAAK,CAACC,IAAP,CAAJ,CAAiBW,WAArC,IAAoDX,IAAI,CAACD,KAAK,CAACC,IAAP,CAAJ,CAAiBW,WAAjB,CAA6BZ,KAAK,CAACD,IAAnC;AAAlN,GAApB;AAAA,CADoB,EAEpB;AAAEP,EAAAA,eAAe,EAAfA;AAAF,CAFoB,CAAP,CAGbC,kBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FileInput from '../components/FileInput';\r\nimport { updateFormValue } from '../store/form';\r\n\r\nclass FileInputContainer extends React.PureComponent {\r\n  inputRef = null;\r\n  fileName = null;\r\n  onChange = ({target}) => {\r\n    this.fileName = target.files[0].name;\r\n    this.props.updateFormValue(this.props.form, this.props.name, target.files[0]);\r\n  }\r\n  onClick = () => {\r\n    if(this.props.hasValue){\r\n      this.fileName = null;\r\n      this.props.updateFormValue(this.props.form, this.props.name, null);\r\n    } else {\r\n      this.inputRef.click();\r\n    }\r\n  }\r\n  setInputRef = (e) => {\r\n    this.inputRef = e;\r\n  }\r\n  render(){\r\n    let { updateFormValue, ...rest } = this.props;\r\n    return(\r\n      <FileInput {...rest} onChange={this.onChange} hasValue={this.props.hasValue} fileName={this.fileName} onClick={this.onClick} setInputRef={this.setInputRef} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  ({form}, props) => ({hasValue: form[props.form] && form[props.form].values[props.name] ? true : false, value: form[props.form] ? form[props.form].values[props.name] : '', error: form[props.form] && form[props.form].inputErrors && form[props.form].inputErrors[props.name]}),\r\n  { updateFormValue }\r\n)(FileInputContainer);\r\n"]},"metadata":{},"sourceType":"module"}